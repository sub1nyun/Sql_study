5. SELECT -> 가져온 로우 중 어떤 데이터를 출력할지 지정 => 다 가져온 후 출력하기에 SELECT * FROM 과 SELECT 컬럼 -> IO 비용이 같음
1. FROM -> 테이블의 존재유무를 확인 후 SELECT 권한이 있는지 확인 작업
2. WHERE -> 조건 체크, 특정 로우 가져오기
3. GROUP BY -> 가져온 로우들을 어떤 방식으로 정렬할 것인지 지정
4. HAVING -> 정렬된 데이터들 중 버리거나 취해야할 데이터가 있는 지 체크
6. ORDER BY -> 필효안 모든 컬럼을 가져왔다면 정렬 
=> ORDER BY절의 경우 SELECT보다 수행 순서가 느리기에 AS을 사용했다면 호출이 불가능함

Q. SELECT보다 늦게 시작하거나 일찍 시작 하는 절에서도 AS 호출이 가능한데?
A. Mysql이나 Postgres에서는 예외적으로 group by나 having절에 alias 사용을 지원해주고 있음
   하지만, 논리적인 수행 순서가 바뀌는 것은 아니고 옵티마이저 내부적으로 바꿔서 수행 시켜주는것
